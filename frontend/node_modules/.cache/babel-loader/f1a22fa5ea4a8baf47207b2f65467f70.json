{"ast":null,"code":"var _jsxFileName = \"/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Lobby/Lobby.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport './Lobby.css';\nimport { User } from '../../App';\nimport winnerIcon from \"../../assets/winnerIcon.svg\";\nimport loserIcon from \"../../assets/loserIcon.svg\";\nimport AnimatedDiv from '../AnimatedDiv/AnimatedDiv';\nimport profilePic from '../../assets/profilePic.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lobby(props) {\n  _s();\n\n  const {\n    user,\n    setUser\n  } = useContext(User);\n  const socket = props.socket;\n  const {\n    state\n  } = useLocation();\n  const [playersObj, setPlayersObj] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const roomCode = state.gameCode;\n  const navigate = useNavigate();\n\n  const showWarning = msg => {\n    const warningContainer = document.getElementById('lobbyWarning');\n    warningContainer.innerText = msg;\n    warningContainer.classList.add('fadeIn');\n    warningContainer.style.display = 'block';\n    setTimeout(() => {\n      warningContainer.classList.remove('fadeIn');\n      setTimeout(() => {\n        warningContainer.classList.add('fadeOut');\n        setTimeout(() => {\n          warningContainer.style.display = 'none';\n          warningContainer.classList.remove('fadeOut');\n          warningContainer.innerHTML = '';\n        }, 400);\n      }, 5000);\n    }, 400);\n  };\n\n  useEffect(() => {\n    setPlayersObj(state.playersObj);\n    socket.on('joinARoom', data => {\n      if (data[0]) {\n        setPlayersObj(JSON.parse(data[1]));\n        console.log(`join happend, current object: ` + JSON.parse(data[1]));\n      }\n    });\n    socket.on('kicked', data => {\n      socket.emit('leaveRoom', [data, true]);\n      navigate('/play', {\n        state: {\n          kicked: true\n        }\n      });\n    });\n    socket.on('leaveMove', data => {\n      //data[0]: userId\n      //data[1]: RoomsObject\n      let obj = JSON.parse(data[1]);\n\n      if (obj['players'][data[0]]) {\n        showWarning(`${obj['players'][data[0]].name} left the game.`);\n        delete obj['players'][data[0]];\n        setPlayersObj(obj);\n      } else if (obj['spectators'][data[0]]) {\n        showWarning(`${obj['spectators'][data[0]].name} left the game.`);\n        delete obj['spectators'][data[0]];\n        setPlayersObj(obj);\n      } else {\n        showWarning(`${obj['winners'][data[0]].name} left the game.`);\n        delete obj['winners'][data[0]];\n        setPlayersObj(obj);\n      }\n    });\n    socket.on('kickMove', data => {\n      // data[0]: userId\n      // data[1]: new players object\n      let obj = JSON.parse(data[1]);\n      console.log(obj);\n      showWarning(`${obj['players'][data[0]].name} has been kicked by the room's leader`);\n      delete obj['players'][data[0]];\n      setPlayersObj(obj);\n    });\n    socket.on('startFriendsAndFamily', data => {\n      navigate('/game', {\n        state: {\n          gameCode: roomCode,\n          question: JSON.parse(data),\n          isSpectator: false\n        }\n      });\n    });\n    socket.on('friendsAndFamilyWinnerNotify', data => {\n      //data[0]: name\n      //data[1]: time\n      //data[2]: newPlayersObject (string)\n      console.log(`${data[0]} has Won! his timescore is ${data[1]}, and this object came along: ${data[2]}`);\n      showNotificationSection(`<img src=${winnerIcon} alt=\"\" /><p><b>${data[0]}</b> has Won! his timescore is ${data[1]}</p>`, '#528a08');\n      setPlayersObj(JSON.parse(data[2]));\n    });\n    socket.on('friendsAndFamilyLoserNotify', data => {\n      //data: name\n      showNotificationSection(`<img src=${loserIcon} alt=\"\" /><p><b>${data}</b> submitted a broken code, what a loser</p>`, '#9A1C0C');\n    });\n    socket.on('friendsAndFamilyGameRestarted', data => {\n      //data: playersObject (string)\n      setPlayersObj(JSON.parse(data));\n    });\n    socket.on('newAdmin', () => {\n      setUser({\n        name: user.name,\n        email: user.email,\n        photo: user.photo,\n        admin: true\n      });\n    });\n    socket.on('updatedEmoji', data => {\n      // data[0]: emoji\n      // data[1]: userId\n      // data[2]: room Object\n      console.log(`Emoji: ${data[0]}`);\n      const room = JSON.parse(data[2]);\n      console.log(`The Player id: ${data[1]}`);\n\n      if (room['players'][data[1]]) {\n        const emojiSpan = document.getElementById(`lobbyPlayerEmojiNum${data[1]}`);\n        console.log(emojiSpan);\n        emojiSpan.classList.add('biggerEmoji');\n        setTimeout(() => {\n          emojiSpan.classList.remove('biggerEmoji');\n          emojiSpan.innerText = data[0];\n          emojiSpan.style.fontSize = '1.2em';\n        }, 3000);\n      } else if (room['spectators'][data[1]]) {\n        console.log(`${data[1]} is a Spectator`);\n      } else if (room['winners'][data[1]]) {\n        console.log(`${data[1]} is a Winner`);\n      }\n    });\n    setIsLoading(false);\n    return () => {\n      socket.off('joinARoom');\n      socket.off('kicked');\n      socket.off('kickUser');\n      socket.off('startFriendsAndFamily');\n      socket.off('friendsAndFamilyWinnerNotify');\n      socket.off('friendsAndFamilyLoserNotify');\n      socket.off('newAdmin');\n      socket.off('updatedEmoji');\n    };\n  }, []);\n\n  const kickUser = userId => {\n    console.log(userId);\n    console.log(`About to send the kick order, current players object: ${JSON.stringify(playersObj)}`);\n    socket.emit('kickUser', [userId, roomCode]);\n  };\n\n  const startGame = () => {\n    socket.emit('startFriendsAndFamily', roomCode);\n  };\n\n  const restartGame = () => {\n    socket.emit('restartFriendsAndFamilyGame', roomCode);\n  };\n\n  const showNotificationSection = (msg, color) => {\n    const notificationSection = document.getElementById('lobbyNotificationContainer');\n    notificationSection.innerHTML = msg;\n    notificationSection.style.backgroundColor = color;\n    notificationSection.classList.add('fadeIn');\n    notificationSection.style.opacity = '1';\n    setTimeout(() => {\n      notificationSection.classList.remove('fadeIn');\n      notificationSection.classList.add('fadeOut');\n      setTimeout(() => {\n        notificationSection.style.opacity = '0';\n        notificationSection.classList.remove('fadeOut');\n      }, 400);\n    }, 8000);\n  };\n\n  const unban = key => {\n    socket.emit('unban', [key, roomCode]);\n    socket.on('unban', data => {\n      //data = new room object\n      setPlayersObj(JSON.parse(data));\n    });\n  };\n\n  const leaveGame = () => {\n    socket.emit('leaveRoom', [roomCode, false]);\n    navigate('/play', {\n      state: {\n        kicked: false\n      }\n    });\n    setUser({\n      name: user.name,\n      email: user.email,\n      photo: user.photo,\n      admin: false\n    });\n  };\n\n  const spectate = key => {\n    socket.emit('spectate', [roomCode, key]);\n    socket.on('spectate', data => {\n      //data[0]: question\n      //data[1]: timer\n      navigate('/game', {\n        state: {\n          gameCode: roomCode,\n          question: JSON.parse(data[0]),\n          isSpectator: true,\n          isView: false,\n          timer: data[1]\n        }\n      });\n    });\n  };\n\n  const view = key => {\n    socket.emit('view', [roomCode, key]);\n    socket.on('view', data => {\n      //data[0]: question\n      //data[1]: code\n      navigate('/game', {\n        state: {\n          gameCode: roomCode,\n          question: JSON.parse(data[0]),\n          isSpectator: false,\n          isView: true,\n          code: data[1]\n        }\n      });\n    });\n  };\n\n  const updateEmojiState = emoji => {\n    socket.emit('updateEmojiState', [emoji, roomCode]);\n  };\n\n  console.log(playersObj);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AnimatedDiv, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lobby\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lobbyContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"lobbyHeader\",\n          children: [\"\\u2615 Lobby: \", roomCode, \"  \", /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-circle liveIndicator\",\n            style: {\n              display: playersObj.closed ? 'block' : 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), user.admin && !playersObj.closed ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"flatBtn\",\n          onClick: startGame,\n          style: {\n            display: 'block',\n            margin: '1em auto'\n          },\n          children: \" Start \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 29\n        }, this) : user.admin && playersObj.closed && Object.keys(playersObj['players']).length === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"flatBtn\",\n          onClick: restartGame,\n          style: {\n            display: 'block',\n            margin: '1em auto'\n          },\n          children: \" Go Again? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 29\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"greyish\",\n          style: {\n            display: playersObj.closed ? 'block' : 'none'\n          },\n          children: [\"some players have already started the game,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 145\n          }, this), \" you will join on the next round\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"warning\",\n          id: \"lobbyWarning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lobbyPlayersContainer\",\n          children: [Object.keys(playersObj['winners']).length > 0 ? Object.keys(playersObj['winners']).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lobbyPlayer\",\n            onClick: () => view(key),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lobbyPlayerImgContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"winnerColor\",\n                src: playersObj['winners'][key].photo,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 41\n              }, this), user.admin && !playersObj['winners'][key].admin && !playersObj.closed ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lobbyPlayerKickBtn\",\n                onClick: () => kickUser(key),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-door-open\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 49\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lobbyPlayerEmojiContainer\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lobbyPlayerEmoji\",\n                  id: `lobbyPlayerEmojiNum${key}`,\n                  children: playersObj['winners'][key].emoji\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"winnerColor\",\n              children: [playersObj['winners'][key].name, \" \", playersObj['winners'][key].admin ? /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-crown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 138\n              }, this) : null, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 176\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"winnerColor\",\n                children: playersObj['winners'][key].timeScore\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 183\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 33\n          }, this)) : null, Object.keys(playersObj['players']).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lobbyPlayer\",\n            onClick: () => spectate(key),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lobbyPlayerImgContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: playersObj['players'][key].photo,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 41\n              }, this), user.admin && !playersObj['players'][key].admin && !playersObj.closed ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lobbyPlayerKickBtn\",\n                onClick: () => kickUser(key),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-door-open\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 49\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lobbyPlayerEmojiContainer\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lobbyPlayerEmoji\",\n                  id: `lobbyPlayerEmojiNum${key}`,\n                  children: playersObj['players'][key].emoji\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [playersObj['players'][key].name, \" \", playersObj['players'][key].admin ? /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-crown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 114\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 33\n          }, this)), Object.keys(playersObj['spectators']).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lobbyPlayer\",\n            style: {\n              cursor: 'default',\n              opacity: '.6'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lobbyPlayerImgContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: playersObj['spectators'][key].photo,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 41\n              }, this), user.admin && !playersObj['spectators'][key].admin && !playersObj.closed ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lobbyPlayerKickBtn\",\n                onClick: () => kickUser(key),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-door-open\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 49\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lobbyPlayerEmojiContainer\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lobbyPlayerEmoji\",\n                  id: `lobbyPlayerEmojiNum${key}`,\n                  children: playersObj['spectators'][key].emoji\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [playersObj['spectators'][key].name, \" \", playersObj['spectators'][key].admin ? /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-crown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 120\n              }, this) : null, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 158\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameNotificationSection\",\n          id: \"lobbyNotificationContainer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lobbyBottomTray\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lobbyBottomTrayLeftSide\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"emojiBtn\",\n            onClick: e => updateEmojiState('💩'),\n            id: \"emojiBtnNum1\",\n            children: \"\\uD83D\\uDCA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"emojiBtn\",\n            onClick: e => updateEmojiState('🚀'),\n            children: \"\\uD83D\\uDE80\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"emojiBtn\",\n            onClick: e => updateEmojiState('🔥'),\n            children: \"\\uD83D\\uDD25\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"emojiBtn\",\n            onClick: e => updateEmojiState('💤'),\n            children: \"\\uD83D\\uDCA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"emojiBtn\",\n            onClick: e => updateEmojiState('✌'),\n            children: \"\\u270C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"emojiBtn\",\n            onClick: e => updateEmojiState('🤘'),\n            children: \"\\uD83E\\uDD18\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"emojiBtn\",\n            onClick: e => updateEmojiState('👏'),\n            children: \"\\uD83D\\uDC4F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lobbyBottomTrayRightSide\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flatBtn\",\n            onClick: leaveGame,\n            children: \"Leave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Lobby, \"hvZiXjuqcVsGCmRfoqDSrF+giwk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Lobby;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"sources":["/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Lobby/Lobby.jsx"],"names":["useContext","useEffect","useState","useLocation","useNavigate","User","AnimatedDiv","profilePic","Lobby","props","user","setUser","socket","state","playersObj","setPlayersObj","isLoading","setIsLoading","roomCode","gameCode","navigate","showWarning","msg","warningContainer","document","getElementById","innerText","classList","add","style","display","setTimeout","remove","innerHTML","on","data","JSON","parse","console","log","emit","kicked","obj","name","question","isSpectator","showNotificationSection","winnerIcon","loserIcon","email","photo","admin","room","emojiSpan","fontSize","off","kickUser","userId","stringify","startGame","restartGame","color","notificationSection","backgroundColor","opacity","unban","key","leaveGame","spectate","isView","timer","view","code","updateEmojiState","emoji","closed","margin","Object","keys","length","map","timeScore","cursor","e"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport './Lobby.css';\nimport { User } from '../../App';\nimport winnerIcon from '../../assets/winnerIcon.svg';\nimport loserIcon from '../../assets/loserIcon.svg';\nimport AnimatedDiv from '../AnimatedDiv/AnimatedDiv';\nimport profilePic from '../../assets/profilePic.jpeg';\n\nexport default function Lobby(props) {\n    const { user, setUser } = useContext(User);\n    const socket = props.socket;\n    const { state } = useLocation();\n    const [playersObj, setPlayersObj] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n    const roomCode = state.gameCode;\n    const navigate = useNavigate();\n\n    const showWarning = (msg) => {\n        const warningContainer = document.getElementById('lobbyWarning');\n        warningContainer.innerText = msg;\n        warningContainer.classList.add('fadeIn');\n        warningContainer.style.display = 'block';\n        setTimeout(() => {\n            warningContainer.classList.remove('fadeIn');\n            setTimeout(() => {\n                warningContainer.classList.add('fadeOut');\n                setTimeout(() => {\n                    warningContainer.style.display = 'none';\n                    warningContainer.classList.remove('fadeOut');\n                    warningContainer.innerHTML = '';\n                }, 400);\n            }, 5000);\n        }, 400);\n    }\n    \n    useEffect(() => {\n        setPlayersObj(state.playersObj);\n        \n        socket.on('joinARoom', data => {\n            if (data[0]) {\n                setPlayersObj(JSON.parse(data[1]));\n                console.log(`join happend, current object: ` + JSON.parse(data[1]));\n            }\n        });\n\n        socket.on('kicked', (data) => {\n                socket.emit('leaveRoom', [data, true]);\n                navigate('/play', {state: { kicked: true }});\n        });\n\n        socket.on('leaveMove', (data) => {\n            //data[0]: userId\n            //data[1]: RoomsObject\n            let obj = JSON.parse(data[1]);\n            if (obj['players'][data[0]]) {\n                showWarning(`${obj['players'][data[0]].name} left the game.`);\n                delete obj['players'][data[0]];\n                setPlayersObj(obj);\n            } else if (obj['spectators'][data[0]]) {\n                showWarning(`${obj['spectators'][data[0]].name} left the game.`);\n                delete obj['spectators'][data[0]];\n                setPlayersObj(obj);\n            } else {\n                showWarning(`${obj['winners'][data[0]].name} left the game.`);\n                delete obj['winners'][data[0]];\n                setPlayersObj(obj);\n            }\n        });\n\n        socket.on('kickMove', (data) => {\n            // data[0]: userId\n            // data[1]: new players object\n            let obj = JSON.parse(data[1]);\n            console.log(obj);\n            showWarning(`${obj['players'][data[0]].name} has been kicked by the room's leader`);\n            delete obj['players'][data[0]];\n            setPlayersObj(obj);\n        });\n\n        socket.on('startFriendsAndFamily', (data) => {\n            navigate('/game', { state: { gameCode: roomCode, question: JSON.parse(data), isSpectator: false } });\n        });\n\n        socket.on('friendsAndFamilyWinnerNotify', (data) => {\n            //data[0]: name\n            //data[1]: time\n            //data[2]: newPlayersObject (string)\n            console.log(`${data[0]} has Won! his timescore is ${data[1]}, and this object came along: ${data[2]}`);\n            showNotificationSection(`<img src=${winnerIcon} alt=\"\" /><p><b>${data[0]}</b> has Won! his timescore is ${data[1]}</p>`, '#528a08');\n            setPlayersObj(JSON.parse(data[2]));\n        });\n\n        socket.on('friendsAndFamilyLoserNotify', (data) => {\n            //data: name\n            showNotificationSection(`<img src=${loserIcon} alt=\"\" /><p><b>${data}</b> submitted a broken code, what a loser</p>`, '#9A1C0C');\n        });\n\n        socket.on('friendsAndFamilyGameRestarted', (data) => {\n            //data: playersObject (string)\n            setPlayersObj(JSON.parse(data));\n        });\n\n        socket.on('newAdmin', () => {\n            setUser({\n                name: user.name,\n                email: user.email,\n                photo: user.photo,\n                admin: true,\n            });\n        });\n\n        socket.on('updatedEmoji', (data) => {\n            // data[0]: emoji\n            // data[1]: userId\n            // data[2]: room Object\n\n            console.log(`Emoji: ${data[0]}`);\n\n            const room = JSON.parse(data[2]);\n\n            console.log(`The Player id: ${data[1]}`);\n            if (room['players'][data[1]]) {\n                const emojiSpan = document.getElementById(`lobbyPlayerEmojiNum${data[1]}`);\n                console.log(emojiSpan);\n                emojiSpan.classList.add('biggerEmoji');\n                setTimeout(() => {\n                    emojiSpan.classList.remove('biggerEmoji');\n                    emojiSpan.innerText = data[0];\n                    emojiSpan.style.fontSize = '1.2em';\n                }, 3000);\n            } else if (room['spectators'][data[1]]) {\n                console.log(`${data[1]} is a Spectator`);\n            } else if (room['winners'][data[1]]) {\n                console.log(`${data[1]} is a Winner`);\n            }\n        });\n\n        setIsLoading(false);\n        \n        return () => {\n            socket.off('joinARoom');\n            socket.off('kicked');\n            socket.off('kickUser');\n            socket.off('startFriendsAndFamily');\n            socket.off('friendsAndFamilyWinnerNotify');\n            socket.off('friendsAndFamilyLoserNotify');\n            socket.off('newAdmin');\n            socket.off('updatedEmoji');\n        }\n    }, []);\n\n    const kickUser = userId => {\n        console.log(userId);\n        console.log(`About to send the kick order, current players object: ${JSON.stringify(playersObj)}`);\n        socket.emit('kickUser', [userId, roomCode]);\n    }\n\n    const startGame = () => {\n        socket.emit('startFriendsAndFamily', roomCode);\n    }\n\n    const restartGame = () => {\n        socket.emit('restartFriendsAndFamilyGame', roomCode);\n    }\n\n    const showNotificationSection = (msg, color) => {\n        const notificationSection = document.getElementById('lobbyNotificationContainer');\n        notificationSection.innerHTML = msg;\n        notificationSection.style.backgroundColor = color;\n        notificationSection.classList.add('fadeIn');\n        notificationSection.style.opacity = '1';\n        setTimeout(() => {\n            notificationSection.classList.remove('fadeIn');\n            notificationSection.classList.add('fadeOut');\n            setTimeout(() => {\n                notificationSection.style.opacity = '0';\n                notificationSection.classList.remove('fadeOut');\n            }, 400);\n        }, 8000);\n    }\n\n    const unban = key => {\n        socket.emit('unban', [key, roomCode]);\n        socket.on('unban', data => {\n            //data = new room object\n            setPlayersObj(JSON.parse(data));\n        });\n    }\n\n    const leaveGame = () => {\n        socket.emit('leaveRoom', [roomCode, false]);\n        navigate('/play', {state: { kicked: false }});\n        setUser({\n            name: user.name,\n            email: user.email,\n            photo: user.photo,\n            admin: false,\n        });\n    }\n\n    const spectate = key => {\n        socket.emit('spectate', [roomCode, key]);\n        socket.on('spectate', data => {\n            //data[0]: question\n            //data[1]: timer\n            navigate('/game', { state: { gameCode: roomCode, question: JSON.parse(data[0]), isSpectator: true, isView: false, timer: data[1] } });\n        });\n    }\n\n    const view = key => {\n        socket.emit('view', [roomCode, key]);\n        socket.on('view', data => {\n            //data[0]: question\n            //data[1]: code\n            navigate('/game', { state: { gameCode: roomCode, question: JSON.parse(data[0]), isSpectator: false, isView: true, code: data[1]} });\n        });\n    }\n\n    const updateEmojiState = (emoji) => {\n        socket.emit('updateEmojiState', [emoji, roomCode]);\n    }\n\n    console.log(playersObj);\n\n    if (isLoading) {\n        return (\n            <h1>Loading</h1>\n        )\n    }\n    \n    return (\n        <AnimatedDiv>\n            {/* <div className=\"lobby\">\n                <h2 className=\"lobbyHeader\">Lobby: {roomCode}  <i class=\"fas fa-circle liveIndicator\" style={{display: (playersObj.closed) ? 'block' : 'none'}}></i></h2>\n                <i className=\"greyish\" style={{display: (playersObj.closed) ? 'block' : 'none'}}>some players have already started the game,<br /> you will join on the next round</i>\n                <div className=\"warning\" id=\"lobbyWarning\"></div>\n                <div className=\"lobbyPlayersContainer\">\n                    {\n                        (Object.keys(playersObj['winners']).length > 0) ? \n                        Object.keys(playersObj['winners']).map(key => (\n                            <div className=\"lobbyPlayer\" onClick={() => view(key)}>\n                                <div className=\"lobbyPlayerDescription\">\n                                    <img className=\"winnerColor\" src={playersObj['winners'][key].photo} alt=\"\" />\n                                    <h4 className=\"winnerColor\">{playersObj['winners'][key].name} {(playersObj['winners'][key].admin) ? (<i class=\"fas fa-crown\"></i>) : null}</h4>\n                                </div>\n                                    {\n                                        (user.admin && !playersObj['winners'][key].admin && !playersObj.closed) ? (\n                                            <button onClick={() => kickUser(key)} className=\"kickBtn\"><i class=\"fas fa-door-open\"></i></button>\n                                        ) : null\n                                    }\n                                    <span className=\"winnerColor\">{playersObj['winners'][key].timeScore}</span>\n                            </div>\n                        )) : null\n                    }\n                    {\n                        Object.keys(playersObj['players']).map(key => (\n                            <div className=\"lobbyPlayer\" onClick={() => spectate(key)}>\n                                <div className=\"lobbyPlayerDescription\">\n                                    <img src={playersObj['players'][key].photo} alt=\"\" />\n                                    <h4>{playersObj['players'][key].name} {(playersObj['players'][key].admin) ? (<i class=\"fas fa-crown\"></i>) : null}</h4>\n                                </div>\n                                    {\n                                        (user.admin && !playersObj['players'][key].admin && !playersObj.closed) ? (\n                                            <button onClick={() => kickUser(key)} className=\"kickBtn\"><i class=\"fas fa-door-open\"></i></button>\n                                        ) : null\n                                    }\n                            </div>\n                        ))\n                    }\n                    {\n                        Object.keys(playersObj['spectators']).map(key => (\n                            <div className=\"lobbyPlayer\" style={{cursor: 'default'}}>\n                                <div className=\"lobbyPlayerDescription\">\n                                    <img src={playersObj['spectators'][key].photo} alt=\"\" />\n                                    <h4>{playersObj['spectators'][key].name} {(playersObj['spectators'][key].admin) ? (<i class=\"fas fa-crown\"></i>): null}</h4>\n                                </div>\n                                {\n                                    (user.admin && !playersObj['spectators'][key].admin && !playersObj.closed) ? (\n                                        <button onClick={() => kickUser(key)} className=\"kickBtn\"><i class=\"fas fa-door-open\"></i></button>\n                                    ) : null\n                                }\n                            </div>\n                        ))\n                    }\n                    {\n                        (user.admin) ? \n                        Object.keys(playersObj['kicked']).map(key => (\n                            <div className=\"lobbyPlayer\" style={{opacity: .7}}>\n                                <div className=\"lobbyPlayerDescription\">\n                                    <img src={playersObj['kicked'][key].photo} alt=\"\" />\n                                    <h4>{playersObj['kicked'][key].name}</h4>\n                                </div>\n                                {\n                                    (user.admin && !playersObj['kicked'][key].admin) ? (\n                                        <button onClick={() => unban(key)} className=\"kickBtn\"><i class=\"fas fa-times\"></i></button>\n                                    ) : null\n                                }\n                            </div>\n                        )) : null\n                    }\n                    <div className=\"gameNotificationSection\" id=\"lobbyNotificationContainer\"></div>\n                </div>\n                {\n                    (user.admin && !playersObj.closed) ? (\n                        <button className=\"flatBtn\" onClick={startGame} style={{display: 'block', margin: '1em auto'}}> Start </button>\n                    ) : (user.admin && playersObj.closed && Object.keys(playersObj['players']).length === 0) ? (\n                        <button className=\"flatBtn\" onClick={restartGame} style={{display: 'block', margin: '1em auto'}}> Go Again? </button>\n                    ) : null\n                }\n                <button className=\"flatBtn\" onClick={leaveGame} style={{display: 'block', margin: '1em auto'}}>Leave game</button>\n            </div> */}\n            <div className=\"lobby\">\n                <div className=\"lobbyContainer\">\n                    <h1 className=\"lobbyHeader\">☕ Lobby: {roomCode}  <i class=\"fas fa-circle liveIndicator\" style={{display: (playersObj.closed) ? 'block' : 'none'}}></i></h1>               \n                    {\n                        (user.admin && !playersObj.closed) ? (\n                            <button className=\"flatBtn\" onClick={startGame} style={{display: 'block', margin: '1em auto'}}> Start </button>\n                        ) : (user.admin && playersObj.closed && Object.keys(playersObj['players']).length === 0) ? (\n                            <button className=\"flatBtn\" onClick={restartGame} style={{display: 'block', margin: '1em auto'}}> Go Again? </button>\n                        ) : null\n                    }\n                    <i className=\"greyish\" style={{display: (playersObj.closed) ? 'block' : 'none'}}>some players have already started the game,<br /> you will join on the next round</i>\n                    <div className=\"warning\" id=\"lobbyWarning\"></div>\n                    <div className=\"lobbyPlayersContainer\">\n                        {\n                            (Object.keys(playersObj['winners']).length > 0) ? \n                            Object.keys(playersObj['winners']).map(key => (\n                                <div className=\"lobbyPlayer\" onClick={() => view(key)}>\n                                    <div className=\"lobbyPlayerImgContainer\">\n                                        <img className=\"winnerColor\" src={playersObj['winners'][key].photo} alt=\"\"/>\n                                        {\n                                            (user.admin && !playersObj['winners'][key].admin && !playersObj.closed) ? (\n                                                <div className=\"lobbyPlayerKickBtn\" onClick={() => kickUser(key)}>\n                                                    <i class=\"fas fa-door-open\"></i>\n                                                </div>\n                                            ) : null\n                                        }\n                                        \n                                        <div className=\"lobbyPlayerEmojiContainer\">\n                                            <span className=\"lobbyPlayerEmoji\" id={`lobbyPlayerEmojiNum${key}`}>{playersObj['winners'][key].emoji}</span>\n                                        </div>\n                                    </div>\n                                    <h4 className=\"winnerColor\">{playersObj['winners'][key].name} {(playersObj['winners'][key].admin) ? (<i class=\"fas fa-crown\"></i>) : null} <br /> <span className=\"winnerColor\">{playersObj['winners'][key].timeScore}</span> </h4>\n                                </div>\n                            )) : null\n                        }\n                        {\n                            Object.keys(playersObj['players']).map(key => (\n                                <div className=\"lobbyPlayer\" onClick={() => spectate(key)}>\n                                    <div className=\"lobbyPlayerImgContainer\">\n                                        <img src={playersObj['players'][key].photo} alt=\"\"/>\n                                        {\n                                            (user.admin && !playersObj['players'][key].admin && !playersObj.closed) ? (\n                                                <div className=\"lobbyPlayerKickBtn\" onClick={() => kickUser(key)}>\n                                                    <i class=\"fas fa-door-open\"></i>\n                                                </div>\n                                            ) : null\n                                        }\n                                        \n                                        <div className=\"lobbyPlayerEmojiContainer\">\n                                            <span className=\"lobbyPlayerEmoji\" id={`lobbyPlayerEmojiNum${key}`}>{playersObj['players'][key].emoji}</span>\n                                        </div>\n                                    </div>\n                                    <h4>{playersObj['players'][key].name} {(playersObj['players'][key].admin) ? (<i class=\"fas fa-crown\"></i>) : null}</h4>\n                                </div>\n                            ))\n                        }\n                        {\n                            Object.keys(playersObj['spectators']).map(key => (\n                                <div className=\"lobbyPlayer\" style={{cursor: 'default', opacity: '.6'}}>\n                                    <div className=\"lobbyPlayerImgContainer\">\n                                        <img src={playersObj['spectators'][key].photo} alt=\"\"/>\n                                        {\n                                            (user.admin && !playersObj['spectators'][key].admin && !playersObj.closed) ? (\n                                                <div className=\"lobbyPlayerKickBtn\" onClick={() => kickUser(key)}>\n                                                    <i class=\"fas fa-door-open\"></i>\n                                                </div>\n                                            ) : null\n                                        }\n                                        \n                                        <div className=\"lobbyPlayerEmojiContainer\">\n                                            <span className=\"lobbyPlayerEmoji\" id={`lobbyPlayerEmojiNum${key}`}>{playersObj['spectators'][key].emoji}</span>\n                                        </div>\n                                    </div>\n                                    <h4>{playersObj['spectators'][key].name} {(playersObj['spectators'][key].admin) ? (<i class=\"fas fa-crown\"></i>) : null} <br /></h4>\n                                </div>\n                            ))\n                        }   \n                        {/* Add the kicked thing */}\n                    </div>\n                    <div className=\"gameNotificationSection\" id=\"lobbyNotificationContainer\"></div>\n                </div>    \n                <div className=\"lobbyBottomTray\">\n                    <div className=\"lobbyBottomTrayLeftSide\">\n                        <button className=\"emojiBtn\" onClick={(e) => updateEmojiState('💩')} id=\"emojiBtnNum1\">💩</button>\n                        <button className=\"emojiBtn\" onClick={(e) => updateEmojiState('🚀')} >🚀</button>\n                        <button className=\"emojiBtn\" onClick={(e) => updateEmojiState('🔥')} >🔥</button>\n                        <button className=\"emojiBtn\" onClick={(e) => updateEmojiState('💤')} >💤</button>\n                        <button className=\"emojiBtn\" onClick={(e) => updateEmojiState('✌')} >✌</button>\n                        <button className=\"emojiBtn\" onClick={(e) => updateEmojiState('🤘')} >🤘</button>\n                        <button className=\"emojiBtn\" onClick={(e) => updateEmojiState('👏')} >👏</button>\n                    </div>\n                    <div className=\"lobbyBottomTrayRightSide\">\n                        <button className=\"flatBtn\" onClick={leaveGame}>Leave</button>\n                    </div>\n                </div>\n            </div>\n        </AnimatedDiv>\n    )\n}"]},"metadata":{},"sourceType":"module"}