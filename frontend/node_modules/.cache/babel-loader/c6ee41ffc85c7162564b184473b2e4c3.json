{"ast":null,"code":"var _jsxFileName = \"/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Game/Game.jsx\",\n    _s = $RefreshSig$();\n\nimport './Game.css';\nimport { useLocation, useNavigate } from 'react-router';\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-twilight\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport ButtonedInputBox from '../ButtonedInputBox/ButtonedInputBox';\nimport { User } from '../../App';\nimport testCaseIcon from \"../../assets/testCase.svg\";\nimport winnerIcon from \"../../assets/winnerIcon.svg\";\nimport loserIcon from \"../../assets/loserIcon.svg\";\nimport runningTestCase from \"../../assets/runningTestCase.svg\";\nimport wrongTestCase from \"../../assets/wrongTestCase.svg\";\nimport correctTestCase from \"../../assets/correctTestCase.svg\";\nimport wrongAnswerIcon from \"../../assets/wrongAnswerIcon.svg\";\nimport finalWinningResultImg from \"../../assets/finalWinningResult.svg\";\nimport AnimatedDiv from '../AnimatedDiv/AnimatedDiv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game(props) {\n  _s();\n\n  const socket = props.socket;\n  const {\n    state\n  } = useLocation();\n  const [activeTab, setActiveTab] = useState('question');\n  const [messages, setMessages] = useState([]);\n  const [timerId, setTimerId] = useState();\n  const solution = useRef(`function ${state.question.functionName}(${state.question.inputName}) {}`);\n  const [spectatorSolution, setSpectatorSolution] = useState(`function ${state.question.functionName}(${state.question.inputName}) {}`);\n  const {\n    user,\n    setUser\n  } = useContext(User);\n  const timerRef = useRef(state.isSpectator ? state.timer : 0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log(state.question);\n\n    if (!state.isView) {\n      setTimerId(setInterval(() => {\n        timerRef.current++;\n        document.querySelector('.timerContainer').innerHTML = timerRef.current;\n      }, 1000));\n    }\n\n    socket.on('globalMessage', data => {\n      setMessages(messages => [...messages, data]);\n    });\n    socket.on('friendsAndFamilyWinnerNotify', data => {\n      //data[0]: name\n      //data[1]: time\n      //data[2]: newPlayersObject (string)\n      showNotificationSection(`<img src=${winnerIcon} alt=\"\" /><p><b>${data[0]}</b> has Won! his timescore is ${data[1]}</p>`, '#528a08');\n    });\n    socket.on('youWonFriendsAndFamily', data => {\n      //data: newPlayersObject (string)\n      console.log(`You Won! Congrats, here, update yourself ${data}`);\n      navigate('/lobby', {\n        state: {\n          gameCode: state.gameCode,\n          playersObj: JSON.parse(data)\n        }\n      });\n    });\n    socket.on('friendsAndFamilyLoserNotify', data => {\n      //data: name\n      showNotificationSection(`<img src=${loserIcon} alt=\"\" /><p><b>${data}</b> submitted a broken code, what a loser</p>`, '#9A1C0C');\n    });\n    socket.on('youLostFriendsAndFamily', () => {\n      console.log('you lost...');\n    });\n    socket.on('newAdmin', () => {\n      setUser({\n        name: user.displayName,\n        email: user.email,\n        photo: user.photoURL,\n        admin: true\n      });\n    });\n    socket.on('newSpectatorsData', data => {\n      // data: Players Code\n      setSpectatorSolution(data); // console.log(data);\n    });\n    socket.on('spectatorTimerRequest', data => {\n      //data: socket.id\n      console.log(`Timer request is here, socket.id: ${data}`);\n      socket.emit('spectatorTimerRequest', [timerRef.current, data, state.gameCode]);\n    });\n    return () => {\n      socket.off('globalMessage');\n      socket.off('friendsAndFamilyWinnerNotify');\n      socket.off('youWonFriendsAndFamily');\n      socket.off('friendsAndFamilyLoserNotify');\n      socket.off('youLostFriendsAndFamily');\n      socket.off('newAdmin');\n      socket.off('newSpectatorsData');\n      socket.off('spectatorTimerRequest');\n    };\n  }, []);\n  console.log(state.question);\n\n  const updateTabState = newTab => {\n    document.querySelector('.tabBarItem-active').classList.remove('tabBarItem-active');\n    document.getElementById(`${newTab}Tab`).classList.add('tabBarItem-active');\n    setActiveTab(newTab);\n  };\n\n  const updateTestCaseWithRunning = index => {\n    console.log(index);\n    const testCase = document.getElementById(`testCaseNum${index}`);\n    const testCaseIcon = document.getElementById(`testCaseIconNum${index}`);\n    testCaseIcon.src = runningTestCase;\n  };\n\n  const updateTestCaseWithWrongAnswer = index => {\n    const testCase = document.getElementById(`testCaseNum${index}`);\n    const testCaseIcon = document.getElementById(`testCaseIconNum${index}`);\n    testCaseIcon.src = wrongTestCase;\n  };\n\n  const updateTestCaseWithCorrectAnswer = index => {\n    const testCase = document.getElementById(`testCaseNum${index}`);\n    const testCaseIcon = document.getElementById(`testCaseIconNum${index}`);\n    testCaseIcon.src = correctTestCase;\n  };\n\n  const changeHandler = event => {\n    solution.current = event;\n    socket.emit('spectatorsUpdate', [solution.current, state.gameCode]);\n  };\n\n  const arrayComparison = (a, b) => {\n    return Array.isArray(a) && Array.isArray(b) && a.length === b.length && a.every((val, index) => val === b[index]);\n  };\n\n  const paramsConstructure = arr => {\n    let params = arr;\n    let result = \"\";\n\n    if (params.length === 1) {\n      result = params[0];\n    } else {\n      for (let i = 0; i < params.length; i++) {\n        if (i !== params.length - 1) {\n          result += `${params[i]}, `;\n        } else {\n          result += params[i];\n        }\n      }\n    }\n\n    return result;\n  };\n\n  const submitCode = () => {\n    let result = true;\n    state.question.testCases.forEach((val, index) => {\n      updateTestCaseWithRunning(index); // if (state.question.dataType == \"Array\") {\n      //     let test = solution.current + `\\n${state.question.functionName}([${val.input}]);`;\n      //     //This eval call must change, preferable with an RCE\n      //     let answer = eval(test);\n      //     if (!arrayComparison(answer, val.expectedOutput)) {\n      //         // Not an AC on this test case.\n      //         result = false;\n      //         updateTestCaseWithWrongAnswer(index);\n      //     } else {\n      //         // Everything is good with this test case\n      //         updateTestCaseWithCorrectAnswer(index);\n      //     }\n      // } else if (state.question.dataType == \"Number\") {\n      //     let test = solution.current + `\\n${state.question.functionName}(${val.input});`;\n      //     //This eval call must change, preferable with an RCE\n      //     let answer = eval(test);\n      //     if (answer !== val.expectedOutput) {\n      //         result = false;\n      //         updateTestCaseWithWrongAnswer(index);\n      //     } else {\n      //         updateTestCaseWithCorrectAnswer(index);\n      //     }\n      // }\n\n      let test = solution.current + `\\n${state.question.functionName}(${val.input});`; // this eval call must change, preferable with an RCE\n\n      let answer = eval(test);\n\n      if (state.question.dataType === \"Array\") {\n        if (!arrayComparison(answer, val.expectedOutput)) {\n          // Not an AC on this test case.\n          result = false;\n          updateTestCaseWithWrongAnswer(index);\n        } else {\n          // Everything is good with this test case\n          updateTestCaseWithCorrectAnswer(index);\n        }\n      } else if (state.question.dataType === \"Number\") {\n        if (answer !== val.expectedOutput) {\n          result = false;\n          updateTestCaseWithWrongAnswer(index);\n        } else {\n          updateTestCaseWithCorrectAnswer(index);\n        }\n      }\n    });\n\n    if (result) {\n      setTimeout(() => {\n        clearInterval(timerId); //Right Answer\n\n        console.log(timerRef.current);\n        const glass = document.getElementById('glass');\n        const finalWinningResult = document.getElementById('finalWinningResult');\n        const nav = document.getElementsByTagName('nav')[0];\n        glass.classList.add('fadeIn');\n        glass.style.display = 'flex';\n        nav.style.display = 'none';\n        document.body.style.overflow = 'hidden';\n\n        for (let i = 0; i < 100; i++) {\n          var randomRotation = Math.floor(Math.random() * 360);\n          var randomWidth = Math.floor(Math.random() * Math.max(document.documentElement.clientWidth, window.innerWidth || 0));\n          var randomHeight = Math.floor(Math.random() * Math.max(document.documentElement.clientHeight, window.innerHeight || 500));\n          var randomAnimationDelay = Math.floor(Math.random() * 15);\n          console.log(randomAnimationDelay);\n          var colors = ['#0CD977', '#FF1C1C', '#FF93DE', '#5767ED', '#FFC61C', '#8497B0'];\n          var randomColor = colors[Math.floor(Math.random() * colors.length)];\n          var confetti = document.createElement('div');\n          confetti.className = 'confetti';\n          confetti.style.top = randomHeight + 'px';\n          confetti.style.right = randomWidth + 'px';\n          confetti.style.backgroundColor = randomColor;\n          confetti.style.transform = 'skew(15deg) rotate(' + randomRotation + 'deg)';\n          confetti.style.animationDelay = randomAnimationDelay + 's';\n          document.getElementById(\"glass\").appendChild(confetti);\n        }\n\n        setTimeout(() => {\n          glass.classList.remove('fadeIn');\n          finalWinningResult.classList.add('fadeIn');\n          finalWinningResult.style.display = 'block';\n          setTimeout(() => {\n            finalWinningResult.classList.remove('fadeIn');\n            setTimeout(() => {\n              nav.style.display = 'flex';\n              document.body.style.overflowY = 'auto';\n              socket.emit('friendsAndFamilyWinner', [timerRef.current, state.gameCode, solution.current]);\n            }, 4000);\n          }, 400);\n        }, 3000);\n      }, 2000);\n    } else {\n      //Wrong Answer\n      updateTabState('console');\n      const consoleNotificationContainer = document.getElementById('consoleNotificationContainer');\n      consoleNotificationContainer.style.display = 'flex';\n      consoleNotificationContainer.classList.add('shaking');\n      setTimeout(() => {\n        consoleNotificationContainer.classList.remove('shaking');\n      }, 500);\n      setTimeout(() => {\n        consoleNotificationContainer.classList.add('fadeOut');\n        setTimeout(() => {\n          consoleNotificationContainer.style.display = 'none';\n          consoleNotificationContainer.classList.remove('fadeOut');\n        }, 400);\n      }, 3500);\n      socket.emit('friendsAndFamilyLoser', state.gameCode);\n    }\n  };\n\n  const showNotificationSection = (msg, color) => {\n    const notificationSection = document.getElementById('gamePageNotificationContainer');\n    notificationSection.innerHTML = msg;\n    notificationSection.style.backgroundColor = color;\n    notificationSection.classList.add('fadeIn');\n    notificationSection.style.opacity = '1';\n    setTimeout(() => {\n      notificationSection.classList.remove('fadeIn');\n      notificationSection.classList.add('fadeOut');\n      setTimeout(() => {\n        notificationSection.style.opacity = '0';\n        notificationSection.classList.remove('fadeOut');\n      }, 400);\n    }, 8000);\n  };\n\n  const showTestCase = index => {\n    const testCase = document.getElementById(`testCaseNum${index}`);\n    testCase.classList.toggle('active');\n  };\n\n  console.log(solution.current);\n  return /*#__PURE__*/_jsxDEV(AnimatedDiv, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass\",\n        id: \"glass\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"finalWinningResult\",\n          id: \"finalWinningResult\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Congratulations!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: finalWinningResultImg,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You actually go them all. Am suprised!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-stopwatch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this), \": \", timerRef.current]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameTopSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomCodeContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Room Code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 56\n          }, this), \" \", state.gameCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameTopSectionRightSide\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timerContainer\",\n            children: timerRef.current\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameBoard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameLeftSide\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabBar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabBarItem tabBarItem-active\",\n              id: \"questionTab\",\n              onClick: () => updateTabState('question'),\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabBarItem\",\n              id: \"consoleTab\",\n              onClick: () => updateTabState('console'),\n              children: \"Console\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tabBarItem\",\n              id: \"chatTab\",\n              onClick: () => updateTabState('chat'),\n              children: \"Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabBarView\",\n            id: \"question\",\n            style: {\n              display: activeTab === 'question' ? 'block' : 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"questionHeading\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"title\",\n                children: state.question.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"author\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#\",\n                  target: \"_blank\",\n                  children: [\"By: \", state.question.madeBy]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 55\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"questionDescription\",\n              children: [state.question.description, 'examples' in state.question ? state.question.examples.map(val => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"codeBlock\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Input: \", val.input]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Output: \", val.output]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 45\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabBarView\",\n            id: \"console\",\n            style: {\n              display: activeTab === 'console' ? 'block' : 'none'\n            },\n            children: [state.question.testCases.map((val, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"testCaseContainer\",\n              id: `testCaseNum${index}`,\n              onClick: val.isOpen ? () => showTestCase(index) : null,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"testCase\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"testCaseLeftSide\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    id: `testCaseIconNum${index}`,\n                    src: testCaseIcon,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Test Case\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"greyish\",\n                      children: val.isOpen ? 'Open' : 'Closed'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-angle-down\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"testCaseContent\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [\"Input: \", val.input]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [\"Expected Output: \", val.expectedOutput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 37\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gameNotificationSection\",\n              id: \"consoleNotificationContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: wrongAnswerIcon,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Idiot :(\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"greyish\",\n                  children: \"We're telling everyone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabBarView\",\n            id: \"chat\",\n            style: {\n              display: activeTab === 'chat' ? 'flex' : 'none'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"messagesContainer\",\n                children: messages.map(val => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"messageContainer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: val.image,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"greyish\",\n                      children: val.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: val.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 378,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ButtonedInputBox, {\n                inputId: \"messageInput\",\n                bgColor: \"var(--main-grey)\",\n                placeholder: \"Put Your Message Here...\",\n                btnValue: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-paper-plane\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 150\n                }, this),\n                btnFunction: \"sendMessage\",\n                socket: socket,\n                gameCode: state.gameCode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameRightSide\",\n          children: /*#__PURE__*/_jsxDEV(AceEditor, {\n            mode: \"javascript\",\n            theme: \"monokai\",\n            name: \"editor\",\n            value: state.isView ? state.code : state.isSpectator ? spectatorSolution : solution.current,\n            editorProps: {\n              $blockScrolling: true\n            },\n            focus: true,\n            enableBasicAutocompletion: true,\n            enableLiveAutocompletion: true,\n            enableSnippets: true,\n            width: \"100%\",\n            fontSize: 16,\n            onChange: changeHandler,\n            readOnly: state.isSpectator || state.isView ? true : false // placeholder=\"You deleted the test functions, you sortof need that for the testcases to work, just do a quick restart or something..\"\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameBottomSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameNotificationSection\",\n          id: \"gamePageNotificationContainer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameActionBtns\",\n          style: {\n            display: state.isSpectator || state.isView ? 'none' : 'block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flatBtn--clicked\",\n            children: \"Btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flatBtn\",\n            style: {\n              marginLeft: '1em'\n            },\n            onClick: submitCode,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"1y1KrIH6J8mKJGyEEpZCw0iEnM4=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Game/Game.jsx"],"names":["useLocation","useNavigate","useContext","useEffect","useRef","useState","AceEditor","ButtonedInputBox","User","AnimatedDiv","Game","props","socket","state","activeTab","setActiveTab","messages","setMessages","timerId","setTimerId","solution","question","functionName","inputName","spectatorSolution","setSpectatorSolution","user","setUser","timerRef","isSpectator","timer","navigate","console","log","isView","setInterval","current","document","querySelector","innerHTML","on","data","showNotificationSection","winnerIcon","gameCode","playersObj","JSON","parse","loserIcon","name","displayName","email","photo","photoURL","admin","emit","off","updateTabState","newTab","classList","remove","getElementById","add","updateTestCaseWithRunning","index","testCase","testCaseIcon","src","runningTestCase","updateTestCaseWithWrongAnswer","wrongTestCase","updateTestCaseWithCorrectAnswer","correctTestCase","changeHandler","event","arrayComparison","a","b","Array","isArray","length","every","val","paramsConstructure","arr","params","result","i","submitCode","testCases","forEach","test","input","answer","eval","dataType","expectedOutput","setTimeout","clearInterval","glass","finalWinningResult","nav","getElementsByTagName","style","display","body","overflow","randomRotation","Math","floor","random","randomWidth","max","documentElement","clientWidth","window","innerWidth","randomHeight","clientHeight","innerHeight","randomAnimationDelay","colors","randomColor","confetti","createElement","className","top","right","backgroundColor","transform","animationDelay","appendChild","overflowY","consoleNotificationContainer","msg","color","notificationSection","opacity","showTestCase","toggle","finalWinningResultImg","title","madeBy","description","examples","map","output","isOpen","wrongAnswerIcon","image","message","code","$blockScrolling","marginLeft"],"mappings":"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","sourcesContent":["import './Game.css';\nimport { useLocation, useNavigate } from 'react-router';\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-twilight\";\nimport \"ace-builds/src-noconflict/ext-language_tools\"\n\nimport ButtonedInputBox from '../ButtonedInputBox/ButtonedInputBox';\nimport { User } from '../../App';\nimport testCaseIcon from '../../assets/testCase.svg';\nimport winnerIcon from '../../assets/winnerIcon.svg';\nimport loserIcon from '../../assets/loserIcon.svg';\nimport runningTestCase from '../../assets/runningTestCase.svg';\nimport wrongTestCase from '../../assets/wrongTestCase.svg';\nimport correctTestCase from '../../assets/correctTestCase.svg';\nimport wrongAnswerIcon from '../../assets/wrongAnswerIcon.svg';\nimport finalWinningResultImg from '../../assets/finalWinningResult.svg';\nimport AnimatedDiv from '../AnimatedDiv/AnimatedDiv';\n\n\nexport default function Game(props) {\n    const socket = props.socket;\n    const { state } = useLocation();\n    const [activeTab, setActiveTab] = useState('question');\n    const [messages, setMessages] = useState([]);\n    const [timerId, setTimerId] = useState();\n    const solution = useRef(`function ${state.question.functionName}(${state.question.inputName}) {}`);\n    const [spectatorSolution, setSpectatorSolution] = useState(`function ${state.question.functionName}(${state.question.inputName}) {}`);\n    const { user, setUser } = useContext(User);\n    const timerRef = useRef((state.isSpectator) ? state.timer : 0);\n    const navigate = useNavigate();\n\n    \n    useEffect(() => {\n        console.log(state.question);\n\n        if (!state.isView) {\n            setTimerId(setInterval(() => {\n                timerRef.current++;\n                document.querySelector('.timerContainer').innerHTML = timerRef.current;\n            }, 1000));\n        }\n\n        socket.on('globalMessage', (data) => {\n            setMessages(messages => [...messages, data]);\n        });\n\n        socket.on('friendsAndFamilyWinnerNotify', (data) => {\n            //data[0]: name\n            //data[1]: time\n            //data[2]: newPlayersObject (string)\n            showNotificationSection(`<img src=${winnerIcon} alt=\"\" /><p><b>${data[0]}</b> has Won! his timescore is ${data[1]}</p>`, '#528a08');\n        });\n\n        socket.on('youWonFriendsAndFamily', (data) => {\n            //data: newPlayersObject (string)\n            console.log(`You Won! Congrats, here, update yourself ${data}`);\n            navigate('/lobby', { state: { gameCode: state.gameCode, playersObj: JSON.parse(data) } });\n        });\n\n        socket.on('friendsAndFamilyLoserNotify', (data) => {\n            //data: name\n            showNotificationSection(`<img src=${loserIcon} alt=\"\" /><p><b>${data}</b> submitted a broken code, what a loser</p>`, '#9A1C0C');\n        });\n\n        socket.on('youLostFriendsAndFamily', () => {\n            console.log('you lost...');\n        });\n\n        socket.on('newAdmin', () => {\n            setUser({\n                name: user.displayName,\n                email: user.email,\n                photo: user.photoURL,\n                admin: true,\n            });\n        });\n\n        socket.on('newSpectatorsData', data => {\n            // data: Players Code\n            setSpectatorSolution(data);\n            // console.log(data);\n        });\n\n        socket.on('spectatorTimerRequest', (data) => {\n            //data: socket.id\n            console.log(`Timer request is here, socket.id: ${data}`);\n            socket.emit('spectatorTimerRequest', [timerRef.current, data, state.gameCode]);\n        });\n\n        return () => {\n            socket.off('globalMessage');\n            socket.off('friendsAndFamilyWinnerNotify');\n            socket.off('youWonFriendsAndFamily');\n            socket.off('friendsAndFamilyLoserNotify');\n            socket.off('youLostFriendsAndFamily');\n            socket.off('newAdmin');\n            socket.off('newSpectatorsData');\n            socket.off('spectatorTimerRequest');\n        }\n    }, []);\n    console.log(state.question);\n\n    const updateTabState = (newTab) => {\n        document.querySelector('.tabBarItem-active').classList.remove('tabBarItem-active');\n        document.getElementById(`${newTab}Tab`).classList.add('tabBarItem-active');\n        setActiveTab(newTab);\n    }\n\n    const updateTestCaseWithRunning = index => {\n        console.log(index);\n        const testCase = document.getElementById(`testCaseNum${index}`);\n        const testCaseIcon = document.getElementById(`testCaseIconNum${index}`);\n        testCaseIcon.src = runningTestCase;\n    }\n\n    const updateTestCaseWithWrongAnswer = index => {\n        const testCase = document.getElementById(`testCaseNum${index}`);\n        const testCaseIcon = document.getElementById(`testCaseIconNum${index}`);\n        testCaseIcon.src = wrongTestCase;\n    }\n\n    const updateTestCaseWithCorrectAnswer = index => {\n        const testCase = document.getElementById(`testCaseNum${index}`);\n        const testCaseIcon = document.getElementById(`testCaseIconNum${index}`);\n        testCaseIcon.src = correctTestCase;\n    }\n\n    const changeHandler = event => {\n        solution.current = event;\n        socket.emit('spectatorsUpdate', [solution.current, state.gameCode]);\n    }\n\n    const arrayComparison = (a, b) => {\n        return Array.isArray(a) &&\n        Array.isArray(b) &&\n        a.length === b.length &&\n        a.every((val, index) => val === b[index]);\n    }\n\n    const paramsConstructure = arr => {\n        let params = arr;\n        let result = \"\";\n        if (params.length === 1) {\n            result = params[0];\n        } else {\n            for (let i=0;i<params.length;i++) {\n                if (i !== params.length - 1) {\n                    result += `${params[i]}, `;\n                } else {\n                    result += params[i];\n                }\n            }\n        }\n        return result;\n    }\n\n    const submitCode = () => {\n        let result = true;\n        state.question.testCases.forEach((val, index) => {\n            updateTestCaseWithRunning(index);\n            // if (state.question.dataType == \"Array\") {\n            //     let test = solution.current + `\\n${state.question.functionName}([${val.input}]);`;\n            //     //This eval call must change, preferable with an RCE\n            //     let answer = eval(test);\n            //     if (!arrayComparison(answer, val.expectedOutput)) {\n            //         // Not an AC on this test case.\n            //         result = false;\n            //         updateTestCaseWithWrongAnswer(index);\n            //     } else {\n            //         // Everything is good with this test case\n            //         updateTestCaseWithCorrectAnswer(index);\n            //     }\n            // } else if (state.question.dataType == \"Number\") {\n            //     let test = solution.current + `\\n${state.question.functionName}(${val.input});`;\n            //     //This eval call must change, preferable with an RCE\n            //     let answer = eval(test);\n            //     if (answer !== val.expectedOutput) {\n            //         result = false;\n            //         updateTestCaseWithWrongAnswer(index);\n            //     } else {\n            //         updateTestCaseWithCorrectAnswer(index);\n            //     }\n            // }\n            let test = solution.current + `\\n${state.question.functionName}(${val.input});`;\n            // this eval call must change, preferable with an RCE\n            let answer = eval(test);\n            if (state.question.dataType === \"Array\") {\n                if (!arrayComparison(answer, val.expectedOutput)) {\n                    // Not an AC on this test case.\n                    result = false;\n                    updateTestCaseWithWrongAnswer(index);\n                } else {\n                    // Everything is good with this test case\n                    updateTestCaseWithCorrectAnswer(index);\n                }\n            } else if (state.question.dataType === \"Number\") {\n                if (answer !== val.expectedOutput) {\n                    result = false;\n                    updateTestCaseWithWrongAnswer(index);\n                } else {\n                    updateTestCaseWithCorrectAnswer(index);\n                }\n            }\n        });\n        if (result) {\n            setTimeout(() => {\n                clearInterval(timerId);\n                //Right Answer\n                console.log(timerRef.current);\n                \n                const glass = document.getElementById('glass');\n                const finalWinningResult = document.getElementById('finalWinningResult');\n                const nav = document.getElementsByTagName('nav')[0];\n                glass.classList.add('fadeIn');\n                glass.style.display = 'flex';\n                nav.style.display = 'none';\n                document.body.style.overflow = 'hidden';\n                for (let i=0;i<100;i++) {\n                    var randomRotation = Math.floor(Math.random() * 360);\n                    var randomWidth = Math.floor(Math.random() * Math.max(document.documentElement.clientWidth, window.innerWidth || 0));\n                    var randomHeight = Math.floor(Math.random() * Math.max(document.documentElement.clientHeight, window.innerHeight || 500));\n                    var randomAnimationDelay = Math.floor(Math.random() * 15);\n                    console.log(randomAnimationDelay);\n                    var colors = ['#0CD977', '#FF1C1C', '#FF93DE', '#5767ED', '#FFC61C', '#8497B0'];\n                    var randomColor = colors[Math.floor(Math.random() * colors.length)];\n                \n                    var confetti = document.createElement('div');\n                    confetti.className = 'confetti';\n                    confetti.style.top = randomHeight + 'px';\n                    confetti.style.right = randomWidth + 'px';\n                    confetti.style.backgroundColor = randomColor;\n                    confetti.style.transform='skew(15deg) rotate(' + randomRotation + 'deg)';\n                    confetti.style.animationDelay=randomAnimationDelay + 's';\n                    document.getElementById(\"glass\").appendChild(confetti);\n                }\n                setTimeout(() => {\n                    glass.classList.remove('fadeIn');\n                    finalWinningResult.classList.add('fadeIn');\n                    finalWinningResult.style.display = 'block';\n                    setTimeout(() => {\n                        finalWinningResult.classList.remove('fadeIn');\n                        setTimeout(() => {\n                            nav.style.display = 'flex';\n                            document.body.style.overflowY = 'auto';\n                            socket.emit('friendsAndFamilyWinner', [timerRef.current, state.gameCode, solution.current]);\n                        }, 4000);\n                    }, 400);\n                }, 3000);\n            }, 2000);\n        } else {\n            //Wrong Answer\n            updateTabState('console');\n            const consoleNotificationContainer = document.getElementById('consoleNotificationContainer');\n            consoleNotificationContainer.style.display = 'flex';\n            consoleNotificationContainer.classList.add('shaking');\n            setTimeout(() => {\n                consoleNotificationContainer.classList.remove('shaking');\n            }, 500);\n            setTimeout(() => {\n                consoleNotificationContainer.classList.add('fadeOut');\n                setTimeout(() => {\n                    consoleNotificationContainer.style.display = 'none';\n                    consoleNotificationContainer.classList.remove('fadeOut');\n                }, 400);\n            }, 3500);\n            socket.emit('friendsAndFamilyLoser', state.gameCode);\n        }\n    }\n\n    const showNotificationSection = (msg, color) => {\n        const notificationSection = document.getElementById('gamePageNotificationContainer');\n        notificationSection.innerHTML = msg;\n        notificationSection.style.backgroundColor = color;\n        notificationSection.classList.add('fadeIn');\n        notificationSection.style.opacity = '1';\n        setTimeout(() => {\n            notificationSection.classList.remove('fadeIn');\n            notificationSection.classList.add('fadeOut');\n            setTimeout(() => {\n                notificationSection.style.opacity = '0';\n                notificationSection.classList.remove('fadeOut');\n            }, 400);\n        }, 8000);\n    }\n\n    const showTestCase = index => {\n        const testCase = document.getElementById(`testCaseNum${index}`);\n        testCase.classList.toggle('active');\n    }\n\n    console.log(solution.current);\n\n    return (\n        <AnimatedDiv>\n            <div className=\"game\">\n                <div className=\"glass\" id=\"glass\">\n                    <div className=\"finalWinningResult\" id=\"finalWinningResult\">\n                        <h2>Congratulations!</h2>\n                        <img src={finalWinningResultImg} alt=\"\" />\n                        <p>You actually go them all. Am suprised!</p> \n                        <h1><i class=\"fas fa-stopwatch\"></i>: {timerRef.current}</h1>\n                    </div>\n                </div>\n                <div className=\"gameTopSection\">\n                    <div className=\"roomCodeContainer\"><b>Room Code:</b> {state.gameCode}</div>\n                    <div className=\"gameTopSectionRightSide\">\n                        <span className=\"timerContainer\">{timerRef.current}</span>\n                    </div>\n                </div>\n                <div className=\"gameBoard\">\n                    <div className=\"gameLeftSide\">\n                        <div className=\"tabBar\">\n                            <div className=\"tabBarItem tabBarItem-active\" id=\"questionTab\" onClick={() => updateTabState('question')}>Question</div>\n                            <div className=\"tabBarItem\" id=\"consoleTab\" onClick={() => updateTabState('console')}>Console</div>\n                            <div className=\"tabBarItem\" id=\"chatTab\" onClick={() => updateTabState('chat')}>Chat</div>\n                        </div>\n                        <div className=\"tabBarView\" id=\"question\" style={{display: (activeTab === 'question') ? 'block' : 'none'}}>\n                            <div className=\"questionHeading\">\n                                <h2 className=\"title\">{state.question.title}</h2>\n                                <p className=\"author\"><a href=\"#\" target=\"_blank\">By: {state.question.madeBy}</a></p>\n                            </div>\n                            <div className=\"questionDescription\">\n                                {state.question.description}\n                                {\n                                    ('examples' in state.question) ? (\n                                        state.question.examples.map(val => (\n                                            <div className=\"codeBlock\">\n                                                <p>Input: {val.input}</p>\n                                                <p>Output: {val.output}</p>\n                                            </div>\n                                        ))\n                                    ) : null\n                                }\n                            </div>\n                        </div>\n                        <div className=\"tabBarView\" id=\"console\" style={{display: (activeTab === 'console') ? 'block' : 'none'}}>\n                            {\n                                state.question.testCases.map((val, index) => (\n                                    <div className=\"testCaseContainer\" id={`testCaseNum${index}`} onClick={(val.isOpen) ? () => showTestCase(index) : null} >\n                                        <div className=\"testCase\">\n                                            <div className=\"testCaseLeftSide\">\n                                                <img id={`testCaseIconNum${index}`} src={testCaseIcon} alt=\"\"/>\n                                                <div>\n                                                    <h4>Test Case</h4>\n                                                    <p className=\"greyish\">{(val.isOpen) ? 'Open' : 'Closed'}</p>\n                                                </div>\n                                            </div>\n                                            <i class=\"fas fa-angle-down\"></i>\n                                        </div>\n                                        <div className=\"testCaseContent\">\n                                            <h5>Input: {val.input}</h5>\n                                            <h5>Expected Output: {val.expectedOutput}</h5>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                            <div className=\"gameNotificationSection\" id=\"consoleNotificationContainer\">\n                                <img src={wrongAnswerIcon} alt=\"\" />\n                                <div>\n                                    <h4>Idiot :(</h4>\n                                    <p className=\"greyish\">We're telling everyone</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"tabBarView\" id=\"chat\" style={{display: (activeTab === 'chat') ? 'flex' : 'none'}}>\n                            <div className=\"chatContainer\">\n                                <div className=\"messagesContainer\">\n                                    {\n                                        messages.map(val => (\n                                            <div className=\"messageContainer\">\n                                                <img src={val.image} alt=\"\" />\n                                                <div>\n                                                    <h5 className=\"greyish\">{val.name}</h5>\n                                                    <p>{val.message}</p>\n                                                </div>\n                                            </div>\n                                        ))\n                                    }\n\n                                </div>\n                                <ButtonedInputBox inputId=\"messageInput\" bgColor=\"var(--main-grey)\" placeholder=\"Put Your Message Here...\" btnValue={<i class=\"fas fa-paper-plane\"></i>} btnFunction='sendMessage' socket={socket} gameCode={state.gameCode}/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"gameRightSide\">\n                    <AceEditor\n                        mode=\"javascript\"\n                        theme=\"monokai\"\n                        name=\"editor\"\n                        value={(state.isView) ? state.code : (state.isSpectator) ? spectatorSolution : solution.current}\n                        editorProps={{ $blockScrolling: true }}\n                        focus={true}\n                        enableBasicAutocompletion={true}\n                        enableLiveAutocompletion={true}\n                        enableSnippets={true}\n                        width=\"100%\"\n                        fontSize={16}\n                        onChange={changeHandler}\n                        readOnly={(state.isSpectator || state.isView) ? true : false}\n                        // placeholder=\"You deleted the test functions, you sortof need that for the testcases to work, just do a quick restart or something..\"\n                    />\n                    </div>\n                </div>\n                <div className=\"gameBottomSection\">\n                    <div className=\"gameNotificationSection\" id=\"gamePageNotificationContainer\"></div>\n                    <div className=\"gameActionBtns\" style={{display: (state.isSpectator || state.isView ? 'none' : 'block')}}>\n                        <button className=\"flatBtn--clicked\">Btn</button>\n                        <button className=\"flatBtn\" style={{marginLeft: '1em'}} onClick={submitCode}>Submit</button>\n                    </div>\n                </div>\n            </div>\n        </AnimatedDiv>\n    )\n}"]},"metadata":{},"sourceType":"module"}