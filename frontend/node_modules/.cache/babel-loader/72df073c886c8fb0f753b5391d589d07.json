{"ast":null,"code":"var _jsxFileName = \"/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Login/Login.jsx\";\nimport './Login.css';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, FacebookAuthProvider, GithubAuthProvider } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  const googleAuth = () => {\n    const provider = new GoogleAuthProvider();\n    const auth = getAuth();\n    signInWithPopup(auth, provider).then(result => {\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      const user = result.user;\n      console.log(user);\n      console.log(token);\n    }).catch(error => {\n      console.error(`An error has occured, Error Code: ${error.code}, Error Message: ${error.message}, Email of error causer: ${error.email}`);\n    });\n  };\n\n  const facebookAuth = () => {\n    const provider = new FacebookAuthProvider();\n    const auth = getAuth();\n    signInWithPopup(auth, provider).then(result => {\n      const user = result.user;\n      const credential = FacebookAuthProvider.credentialFromResult(result);\n      const accessToken = credential.accessToken;\n      console.log(user);\n      console.log(accessToken);\n    });\n  };\n\n  const githubAuth = () => {\n    const provider = new GithubAuthProvider();\n    const auth = getAuth();\n    signInWithPopup(auth, provider).then(result => {\n      const user = result.user;\n      const credential = GithubAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      console.log(user);\n      console.log(token);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginHeaders\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to MultiCoder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"greyish\",\n        children: \"Login and start kicking!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginBtns\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: googleAuth,\n        className: \"loginBtn--google\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fab fa-google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 75\n        }, this), \"Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: facebookAuth,\n        className: \"loginBtn--facebook\",\n        children: \"Facebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: githubAuth,\n        className: \"loginBtn--github\",\n        children: \"Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Login/Login.jsx"],"names":["getAuth","signInWithPopup","GoogleAuthProvider","FacebookAuthProvider","GithubAuthProvider","Login","googleAuth","provider","auth","then","result","credential","credentialFromResult","token","accessToken","user","console","log","catch","error","code","message","email","facebookAuth","githubAuth"],"mappings":"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","sourcesContent":["import './Login.css';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, FacebookAuthProvider, GithubAuthProvider } from 'firebase/auth';\n\nexport default function Login() {\n\n    \n    const googleAuth = () => {\n        const provider = new GoogleAuthProvider();\n        const auth = getAuth();\n        signInWithPopup(auth, provider).then((result) => {\n            const credential = GoogleAuthProvider.credentialFromResult(result);\n            const token = credential.accessToken;\n            const user = result.user;\n            console.log(user);\n            console.log(token);\n        }).catch((error) => {\n            console.error(`An error has occured, Error Code: ${error.code}, Error Message: ${error.message}, Email of error causer: ${error.email}`);\n        });\n    }\n\n    const facebookAuth = () => {\n        const provider = new FacebookAuthProvider();\n        const auth = getAuth();\n        signInWithPopup(auth, provider).then((result) => {\n            const user = result.user;\n            const credential = FacebookAuthProvider.credentialFromResult(result);\n            const accessToken = credential.accessToken;\n\n            console.log(user);\n            console.log(accessToken);\n        })\n    }\n\n    const githubAuth = () => {\n        const provider = new GithubAuthProvider();\n        const auth = getAuth();\n        signInWithPopup(auth, provider).then((result) => {\n            const user = result.user;\n            const credential = GithubAuthProvider.credentialFromResult(result);\n            const token = credential.accessToken;\n\n            console.log(user);\n            console.log(token);\n        })\n    }\n\n    return (\n        <div className=\"Login\">\n            <div className=\"loginHeaders\">\n                <h1>Welcome to MultiCoder</h1>\n                <p className=\"greyish\">Login and start kicking!</p>\n            </div>\n            <div className=\"loginBtns\">\n                <button onClick={googleAuth} className=\"loginBtn--google\"><i class=\"fab fa-google\"></i>Google</button>\n                <button onClick={facebookAuth} className=\"loginBtn--facebook\">Facebook</button>\n                <button onClick={githubAuth} className=\"loginBtn--github\">Github</button>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}