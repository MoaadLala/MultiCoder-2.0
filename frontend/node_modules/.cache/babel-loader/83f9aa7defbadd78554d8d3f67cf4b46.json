{"ast":null,"code":"var _jsxFileName = \"/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Lobby/Lobby.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport './Lobby.css';\nimport { User } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lobby(props) {\n  _s();\n\n  const {\n    user\n  } = useContext(User);\n  const socket = props.socket;\n  const {\n    state\n  } = useLocation();\n  const [playersObj, setPlayersObj] = useState(state.playersObj);\n  const roomCode = state.gameCode;\n  const navigate = useNavigate();\n  useEffect(() => {\n    socket.on('joinARoom', data => {\n      if (data[0]) {\n        setPlayersObj(JSON.parse(data[1]));\n      }\n    });\n    socket.on('kicked', data => {\n      if (data) {\n        navigate('play', {\n          state: {\n            kicked: true\n          }\n        });\n      }\n    });\n    return () => {\n      socket.off('joinARoom');\n      socket.off('kicked');\n    };\n  }, []);\n\n  const kickUser = userId => {\n    // TODO: Redirect kicked user to the Play page, with a message\n    // TODO: Update room object in backend\n    // TODO: Inform everyone else in the room with the move\n    socket.emit('kickUser', [userId, roomCode]);\n  };\n\n  console.log(playersObj);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"looby\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Lobby: \", roomCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lobbyPlayersContainer\",\n      children: Object.keys(playersObj).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lobbyPlayer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: playersObj[key].photo,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"greyish\",\n            children: [playersObj[key].name, \" \", playersObj[key].admin ? /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-crown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 108\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this), user.admin ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => kickUser(key),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-door-open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 75\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Lobby, \"oLjlY/8wnQniOtN0ZVYAspBwAss=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = Lobby;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"sources":["/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Lobby/Lobby.jsx"],"names":["useContext","useEffect","useState","useLocation","useNavigate","User","Lobby","props","user","socket","state","playersObj","setPlayersObj","roomCode","gameCode","navigate","on","data","JSON","parse","kicked","off","kickUser","userId","emit","console","log","Object","keys","map","key","photo","name","admin"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport './Lobby.css';\nimport { User } from '../../App';\n\nexport default function Lobby(props) {\n    const { user } = useContext(User);\n    const socket = props.socket;\n    const { state } = useLocation();\n    const [playersObj, setPlayersObj] = useState(state.playersObj);\n    const roomCode = state.gameCode;\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        socket.on('joinARoom', data => {\n            if (data[0]) {\n                setPlayersObj(JSON.parse(data[1]));\n            }\n        });\n\n        socket.on('kicked', (data) => {\n            if (data) {\n                navigate('play', {state: { kicked: true }});\n            }\n        })\n        \n        return () => {\n            socket.off('joinARoom');\n            socket.off('kicked');\n        }\n    }, []);\n\n    const kickUser = userId => {\n        // TODO: Redirect kicked user to the Play page, with a message\n        // TODO: Update room object in backend\n        // TODO: Inform everyone else in the room with the move\n        socket.emit('kickUser', [userId, roomCode]);\n    }\n    \n    console.log(playersObj);\n    return (\n        <div className=\"looby\">\n            <h2>Lobby: {roomCode}</h2>\n            <div className=\"lobbyPlayersContainer\">\n                {\n                    Object.keys(playersObj).map(key => (\n                        <div className=\"lobbyPlayer\">\n                            <div>\n                                <img src={playersObj[key].photo} alt=\"\" />\n                                <h4 className=\"greyish\">{playersObj[key].name} {(playersObj[key].admin) ? (<i class=\"fas fa-crown\"></i>): null}</h4>\n                            </div>\n                            {\n                                (user.admin) ? (\n                                    <button onClick={() => kickUser(key)}><i class=\"fas fa-door-open\"></i></button>\n                                ) : null\n                            }\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}