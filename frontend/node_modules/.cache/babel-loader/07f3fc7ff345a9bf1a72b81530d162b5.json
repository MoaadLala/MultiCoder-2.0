{"ast":null,"code":"var _jsxFileName = \"/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport './Login.css';\nimport { useContext } from 'react';\nimport { User } from '../../App';\nimport { GoogleLogin } from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const {\n    user,\n    setUser\n  } = useContext(User);\n\n  const googleAuth = response => {\n    //Write Google Auth\n    setUser({\n      name: response.profileObj['name'],\n      photo: response.profileObj['imageUrl'],\n      email: response.profileObj['email']\n    });\n    refreshGoogleTokenSetup(response);\n  };\n\n  const facebookAuth = response => {\n    //Write Facebook Auth\n    console.log(response);\n  };\n\n  const githubAuth = () => {//Write Github Auth\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginHeaders\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to MultiCoder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"greyish\",\n        children: \"Login and start kicking!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginBtns\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: \"299398573285-d7fo2pld42fqrn91r2dnfja1p30dkid3.apps.googleusercontent.com\",\n        onSuccess: googleAuth,\n        onFailure: googleAuth,\n        cookiePolicy: 'single_host_origin',\n        isSignedIn: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FacebookLogin, {\n        appId: \"653395662493521\",\n        fields: \"name,email,picture\",\n        onClick: facebookAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: githubAuth,\n        className: \"loginBtn--github\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fab fa-github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 75\n        }, this), \"Github\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"J8N1KxrPXxnpj+orf0lLGQtSOr8=\");\n\n_c = Login;\n\nfunction refreshGoogleTokenSetup(res) {\n  let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n\n  const refreshToken = async () => {\n    const newAuthRes = await res.reloadAuthResponse();\n    refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n    setTimeout(refreshToken, refreshTiming);\n  };\n\n  setTimeout(refreshToken, refreshTiming);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Login/Login.jsx"],"names":["useContext","User","GoogleLogin","FacebookLogin","Login","user","setUser","googleAuth","response","name","profileObj","photo","email","refreshGoogleTokenSetup","facebookAuth","console","log","githubAuth","res","refreshTiming","tokenObj","expires_in","refreshToken","newAuthRes","reloadAuthResponse","setTimeout"],"mappings":";;;AAAA,OAAO,aAAP;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBN,UAAU,CAACC,IAAD,CAAlC;;AAEA,QAAMM,UAAU,GAAIC,QAAD,IAAc;AAC7B;AACAF,IAAAA,OAAO,CAAC;AACJG,MAAAA,IAAI,EAAED,QAAQ,CAACE,UAAT,CAAoB,MAApB,CADF;AAEJC,MAAAA,KAAK,EAAEH,QAAQ,CAACE,UAAT,CAAoB,UAApB,CAFH;AAGJE,MAAAA,KAAK,EAAEJ,QAAQ,CAACE,UAAT,CAAoB,OAApB;AAHH,KAAD,CAAP;AAKAG,IAAAA,uBAAuB,CAACL,QAAD,CAAvB;AACH,GARD;;AAUA,QAAMM,YAAY,GAAIN,QAAD,IAAc;AAC/B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACH,GAHD;;AAKA,QAAMS,UAAU,GAAG,MAAM,CACrB;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,WAAD;AACI,QAAA,QAAQ,EAAC,0EADb;AAEI,QAAA,SAAS,EAAEV,UAFf;AAGI,QAAA,SAAS,EAAEA,UAHf;AAII,QAAA,YAAY,EAAE,oBAJlB;AAKI,QAAA,UAAU,EAAE;AALhB;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,aAAD;AACI,QAAA,KAAK,EAAC,iBADV;AAEI,QAAA,MAAM,EAAC,oBAFX;AAGI,QAAA,OAAO,EAAEO;AAHb;AAAA;AAAA;AAAA;AAAA,cATJ,eAcI;AAAQ,QAAA,OAAO,EAAEG,UAAjB;AAA6B,QAAA,SAAS,EAAC,kBAAvC;AAAA,gCAA0D;AAAG,UAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA/CuBb,K;;KAAAA,K;;AAkDxB,SAASS,uBAAT,CAAiCK,GAAjC,EAAsC;AAClC,MAAIC,aAAa,GAAG,CAACD,GAAG,CAACE,QAAJ,CAAaC,UAAb,IAA2B,OAAO,IAAI,EAAvC,IAA6C,IAAjE;;AACA,QAAMC,YAAY,GAAG,YAAW;AAC5B,UAAMC,UAAU,GAAG,MAAML,GAAG,CAACM,kBAAJ,EAAzB;AACAL,IAAAA,aAAa,GAAG,CAACI,UAAU,CAACF,UAAX,IAAyB,OAAO,IAAI,EAArC,IAA2C,IAA3D;AACAI,IAAAA,UAAU,CAACH,YAAD,EAAeH,aAAf,CAAV;AACH,GAJD;;AAKAM,EAAAA,UAAU,CAACH,YAAD,EAAeH,aAAf,CAAV;AACH","sourcesContent":["import './Login.css';\nimport { useContext } from 'react';\nimport { User } from '../../App';\nimport { GoogleLogin } from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\n\nexport default function Login() {\n    const {user, setUser} = useContext(User);\n    \n    const googleAuth = (response) => {\n        //Write Google Auth\n        setUser({\n            name: response.profileObj['name'],\n            photo: response.profileObj['imageUrl'],\n            email: response.profileObj['email'],\n        });\n        refreshGoogleTokenSetup(response);\n    }\n\n    const facebookAuth = (response) => {\n        //Write Facebook Auth\n        console.log(response);\n    }\n\n    const githubAuth = () => {\n        //Write Github Auth\n    }\n\n\n    return (\n        <div className=\"Login\">\n            <div className=\"loginHeaders\">\n                <h1>Welcome to MultiCoder</h1>\n                <p className=\"greyish\">Login and start kicking!</p>\n            </div>\n            <div className=\"loginBtns\">\n                <GoogleLogin \n                    clientId=\"299398573285-d7fo2pld42fqrn91r2dnfja1p30dkid3.apps.googleusercontent.com\"\n                    onSuccess={googleAuth}\n                    onFailure={googleAuth}\n                    cookiePolicy={'single_host_origin'}\n                    isSignedIn={true}\n                />\n                {/* <button onClick={facebookAuth} className=\"loginBtn--facebook\"><i class=\"fab fa-facebook\"></i>Facebook</button> */}\n                <FacebookLogin \n                    appId=\"653395662493521\"\n                    fields=\"name,email,picture\"\n                    onClick={facebookAuth}\n                />\n                <button onClick={githubAuth} className=\"loginBtn--github\"><i class=\"fab fa-github\"></i>Github</button>\n            </div>\n        </div>\n    )\n}\n\n\nfunction refreshGoogleTokenSetup(res) {\n    let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n    const refreshToken = async() => {\n        const newAuthRes = await res.reloadAuthResponse();\n        refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n        setTimeout(refreshToken, refreshTiming);\n    };\n    setTimeout(refreshToken, refreshTiming);\n}"]},"metadata":{},"sourceType":"module"}