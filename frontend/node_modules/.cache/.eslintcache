[{"/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/index.js":"1","/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/App.js":"2","/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Home/Home.jsx":"3","/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Navbar/Navbar.jsx":"4","/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Play/Play.jsx":"5","/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Game/Game.jsx":"6","/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/ButtonedInputBox/ButtonedInputBox.jsx":"7","/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Login/Login.jsx":"8","/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Lobby/Lobby.jsx":"9"},{"size":219,"mtime":1637209560169,"results":"10","hashOfConfig":"11"},{"size":1640,"mtime":1638304077808,"results":"12","hashOfConfig":"11"},{"size":4132,"mtime":1637148020818,"results":"13","hashOfConfig":"11"},{"size":2511,"mtime":1638041726229,"results":"14","hashOfConfig":"11"},{"size":6855,"mtime":1638379761102,"results":"15","hashOfConfig":"11"},{"size":6384,"mtime":1638288377942,"results":"16","hashOfConfig":"11"},{"size":1091,"mtime":1638041179792,"results":"17","hashOfConfig":"11"},{"size":3310,"mtime":1638306396666,"results":"18","hashOfConfig":"11"},{"size":5417,"mtime":1638474012913,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"farzu1",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/index.js",[],["43","44"],"/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/App.js",["45"],"import {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport socketClient from 'socket.io-client';\nimport Game from \"./Components/Game/Game\";\n\nimport Home from './Components/Home/Home';\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Play from \"./Components/Play/Play\";\nimport Lobby from \"./Components/Lobby/Lobby\";\n\nimport { createContext, useMemo, useState } from \"react\";\nimport { initializeApp } from 'firebase/app';\nimport Login from \"./Components/Login/Login\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCM_vXZ-ZgeHMQ_rqjCRGwMc516purIik8\",\n  authDomain: \"multicoder-900aa.firebaseapp.com\",\n  projectId: \"multicoder-900aa\",\n  storageBucket: \"multicoder-900aa.appspot.com\",\n  messagingSenderId: \"865496587457\",\n  appId: \"1:865496587457:web:41e916c0910a83bc278840\",\n  measurementId: \"G-937Z5NFW9W\"\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const User = createContext();\n\nconst socket = socketClient('http://127.0.0.1:8080');\nfunction App() {\n  const [user, setUser] = useState({});\n  const value = useMemo(\n    () => ({user, setUser}),\n    [user]\n  );\n  return (\n    <User.Provider value={value}>\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/play\" element={<Play socket={socket}/>} />\n          <Route path=\"/game\" element={<Game socket={socket}/>} />\n          <Route path=\"/login\" element={<Login socket={socket} />} />\n          <Route path=\"/lobby\" element={<Lobby socket={socket}/>} />\n          {/* <Redirect to=\"/\" /> */}\n        </Routes>\n      </Router>\n    </User.Provider>\n  );\n}\n\nexport default App;\n","/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Home/Home.jsx",[],"/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Navbar/Navbar.jsx",[],"/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Play/Play.jsx",["46"],"import './Play.css';\nimport createRoom from '../../assets/createRoom.svg';\nimport joinRoom from '../../assets/joinRoom.svg';\nimport friendsFamily from '../../assets/friends&family.png';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useContext, useState, useEffect } from 'react';\nimport { User } from '../../App';\n\nexport default function Play(props) {\n    const {user, setUser} = useContext(User);\n    const socket = props.socket;\n    const navigate = useNavigate();\n    const [joinCode, setJoinCode] = useState('');\n    const { state } = useLocation();\n\n    console.log(user);\n    const initFriendsAndFamilyGame = () => {\n        socket.emit('initFriendsAndFamilyGame', null);\n        socket.on('friendsAndFamilyGameCreated', (data) => {\n            setUser({\n                name: user.name,\n                email: user.email,\n                photo: user.photo,\n                admin: true,\n            });\n            navigate(\"/lobby\", { state: { gameCode: data[0], playersObj: JSON.parse(data[1]) } } );\n        });\n    }\n\n    const showCreateRoom = () => {\n        const joinWays = document.querySelector('.playJoinWays');\n        const createRoomContainer = document.querySelector('.createARoom');\n        joinWays.classList.add('fadeOut');\n        setTimeout(() => {\n            joinWays.classList.remove('fadeOut');\n            joinWays.style.display = 'none';\n            createRoomContainer.classList.add('fadeIn');\n            createRoomContainer.style.display = 'block';\n            setTimeout(() => {\n                createRoomContainer.classList.remove('fadeIn');\n            }, 400);\n        }, 400);\n    }\n\n    const showJoinRoom = () => {\n        const joinWays = document.querySelector('.playJoinWays');\n        const joinRoomContainer = document.querySelector('.joinARoomContainer');\n        joinWays.classList.add('fadeOut');\n        setTimeout(() => {\n            joinWays.classList.remove('fadeOut');\n            joinWays.style.display = 'none';\n            joinRoomContainer.classList.add('fadeIn');\n            joinRoomContainer.style.display = 'block';\n            setTimeout(() => {\n                joinRoomContainer.classList.remove('fadeIn');\n            }, 400);\n        }, 400);\n    }\n\n    const hideCreateARoom = () => {\n        const joinWays = document.querySelector('.playJoinWays');\n        const createRoomContainer = document.querySelector('.createARoom');\n        createRoomContainer.classList.add('fadeOut');\n        setTimeout(() => {\n            createRoomContainer.classList.remove('fadeOut');\n            createRoomContainer.style.display = 'none';\n            joinWays.classList.add('fadeIn');\n            joinWays.style.display = 'flex';\n            setTimeout(() => {\n                joinWays.classList.remove('fadeIn');\n            }, 400);\n        }, 400);\n    }\n\n    const hideJoinARoom = () => {\n        const joinWays = document.querySelector('.playJoinWays');\n        const joinRoomContainer = document.querySelector('.joinARoomContainer');\n        joinRoomContainer.classList.add('fadeOut');\n        setTimeout(() => {\n            joinRoomContainer.classList.remove('fadeOut');\n            joinRoomContainer.style.display = 'none';\n            joinWays.classList.add('fadeIn');\n            joinWays.style.display = 'flex';\n            setTimeout(() => {\n                joinWays.classList.remove('fadeIn');\n            }, 400);\n        }, 400);\n    }\n\n    const joinARoom = () => {\n        socket.emit('joinARoom', joinCode);\n        socket.on('joinARoom', (data) => {\n            if (data[0]) {\n                navigate(\"/lobby\", { state: { gameCode: joinCode, playersObj: JSON.parse(data[1]) } } );\n            } else {\n                // Write an error handler\n                console.log('Error joining: No room with this code exists');\n            }\n        })\n    }\n\n    const showWarning = (msg) => {\n        const warningContainer = document.getElementById('playWarning');\n        warningContainer.innerText = msg;\n        warningContainer.classList.add('fadeIn');\n        warningContainer.style.display = 'block';\n        setTimeout(() => {\n            warningContainer.classList.remove('fadeIn');\n            setTimeout(() => {\n                warningContainer.classList.add('fadeOut');\n                setTimeout(() => {\n                    warningContainer.style.display = 'none';\n                    warningContainer.classList.remove('fadeOut');\n                    warningContainer.innerHTML = '';\n                }, 400);\n            }, 5000);\n        }, 400);\n    }\n\n    useEffect(() => {\n        if (state) {\n            if (state.kicked) {\n                showWarning(\"Sorry, but the room's leader kicked you out...\");\n            }\n        }\n    }, [])\n\n    return (\n        <div className=\"play\">\n            <h1>Welcome to the Arena</h1>\n            <p className=\"greyish\">Choose your way of joining</p>\n            <div className=\"warning\" id=\"playWarning\"></div>\n            <div className=\"playJoinWays\">\n                <div className=\"joinWay\" onClick={showCreateRoom}>\n                    <img src={createRoom} alt=\"\" />\n                    <h3>Create a Room</h3>\n                    <p className=\"greyish\">\n                        Be the boss, choose the game mode, and\n                        orginaze the whole thing\n                    </p>\n                </div>\n                <div className=\"joinWay\" onClick={showJoinRoom}>\n                    <img src={joinRoom} alt=\"\" />\n                    <h3>Join a Room</h3>\n                    <p className=\"greyish\">\n                        let the boring stuff to the boring people,\n                        copy, paste, and let’s goo! \n                    </p>\n                </div>\n            </div>\n            <div className=\"createARoom\">\n                <div className=\"gameMode\" onClick={initFriendsAndFamilyGame}>\n                    <img src={friendsFamily} alt=\"\" />\n                    <div>\n                        <h3>Friends & Family</h3>\n                        <p className=\"greyish\">As Many As You  Like! (20 Tops)</p>\n                    </div>\n                </div>\n                <button className=\"flatBtn\" onClick={hideCreateARoom}>Back</button>\n            </div>\n            <div className=\"joinARoomContainer\">\n                <div className=\"joinARoom\">\n                    <button className=\"closeJoinARoom\" onClick={hideJoinARoom}><i class=\"fas fa-times\"></i></button>\n                    <h3>Enter the room's code:</h3>\n                    <div className=\"inputBox\">\n                        <input type=\"text\" placeholder=\"XXXXX-XXXXX-XXXXX\" onChange={(e) => setJoinCode(e.target.value)}/>\n                    </div>\n                    <button className=\"flatBtn\" onClick={joinARoom}>Join</button>\n                </div>\n            </div>\n        </div>\n    )\n}","/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Game/Game.jsx",["47","48"],"import './Game.css';\nimport { useLocation } from 'react-router';\nimport { useContext, useEffect, useState } from 'react';\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-twilight\";\nimport ButtonedInputBox from '../ButtonedInputBox/ButtonedInputBox';\nimport { User } from '../../App';\n\n\nexport default function Game(props) {\n    const socket = props.socket;\n    const { state } = useLocation();\n    const [activeTab, setActiveTab] = useState('question');\n    const [messages, setMessages] = useState([]);\n    const [question, setQuestion] = useState({});\n    const { user } = useContext(User);\n\n    console.log(user);\n\n    useEffect(() => {\n        state.question = JSON.parse(state.question);\n        setQuestion({\n            title: state.question['_fieldsProto']['title']['stringValue'],\n            madeBy: state.question['_fieldsProto']['madeBy']['stringValue'],\n            description: state.question['_fieldsProto']['description']['stringValue'],\n            testCases: state.question['_fieldsProto']['testCases']['arrayValue'],\n            examples: state.question['_fieldsProto']['examples']['arrayValue']['values'],\n            accountLink: state.question['_fieldsProto']['accountLink']['stringValue'],\n        });\n\n        \n        socket.on('globalMessage', (data) => {\n            setMessages(messages => [...messages, data]);\n        });\n        return () => {\n            socket.off('globalMessage');\n        }\n    }, []);\n    console.log(question);\n\n    const updateTabState = (newTab) => {\n        document.querySelector('.tabBarItem-active').classList.remove('tabBarItem-active');\n        document.getElementById(`${newTab}Tab`).classList.add('tabBarItem-active');\n        setActiveTab(newTab);\n    }\n\n    const changeHandler = event => {\n        console.log(event);\n    }\n\n    return (\n        <div className=\"game\">\n            <div className=\"gameTopSection\">\n                <div className=\"roomCodeContainer\"><b>Room Code:</b> {state.gameCode}</div>\n            </div>\n            <div className=\"gameBoard\">\n                <div className=\"gameLeftSide\">\n                    <div className=\"tabBar\">\n                        <div className=\"tabBarItem tabBarItem-active\" id=\"questionTab\" onClick={() => updateTabState('question')}>Question</div>\n                        <div className=\"tabBarItem\" id=\"consoleTab\" onClick={() => updateTabState('console')}>Console</div>\n                        <div className=\"tabBarItem\" id=\"chatTab\" onClick={() => updateTabState('chat')}>Chat</div>\n                    </div>\n                    <div className=\"tabBarView\" id=\"question\" style={{display: (activeTab === 'question') ? 'block' : 'none'}}>\n                        <div className=\"questionHeading\">\n                            <h2 className=\"title\">{question.title}</h2>\n                            <p className=\"author\"><a href={question.accountLink} target=\"_blank\">By: {question.madeBy}</a></p>\n                        </div>\n                        <div className=\"questionDescription\">\n                            {question.description}\n                            {/* <div className=\"codeBlock\">\n                                <p>Input: [1, 32, 12, 34, 231, 42]</p>\n                                <p>output: [1, 12, 32, 34, 42, 231]</p>\n                            </div> */}\n                            {\n                                ('examples' in question) ? (\n                                    question.examples.map(val => (\n                                        <div className=\"codeBlock\">\n                                            <p>Input: {val.mapValue.fields.input.stringValue}</p>\n                                            <p>Input: {val.mapValue.fields.output.stringValue}</p>\n                                        </div>\n                                    ))\n                                ) : null\n                            }\n                        </div>\n                    </div>\n                    <div className=\"tabBarView\" id=\"console\" style={{display: (activeTab === 'console') ? 'block' : 'none'}}>\n                        <h2>Console</h2>\n                    </div>\n                    <div className=\"tabBarView\" id=\"chat\" style={{display: (activeTab === 'chat') ? 'flex' : 'none'}}>\n                        <div className=\"chatContainer\">\n                            <div className=\"messagesContainer\">\n                                {\n                                    messages.map(val => (\n                                        <div className=\"messageContainer\">\n                                            <img src={val.image} alt=\"\" />\n                                            <div>\n                                                <h5 className=\"greyish\">{val.name}</h5>\n                                                <p>{val.message}</p>\n                                            </div>\n                                        </div>\n                                    ))\n                                }\n\n                            </div>\n                            <ButtonedInputBox inputId=\"messageInput\" bgColor=\"var(--main-grey)\" placeholder=\"Put Your Message Here...\" btnValue={<i class=\"fas fa-paper-plane\"></i>} btnFunction='sendMessage' socket={socket} gameCode={state.gameCode}/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"gameRightSide\">\n                <AceEditor\n                    mode=\"javascript\"\n                    theme=\"monokai\"\n                    name=\"editor\"\n                    editorProps={{ $blockScrolling: true }}\n                    focus={true}\n                    enableBasicAutocompletion={true}\n                    enableLiveAutocompletion={true}\n                    enableSnippets={true}\n                    width=\"100%\"\n                    fontSize={16}\n                    onChange={changeHandler}\n                />\n                </div>\n            </div>\n            <div className=\"gameBottomSection\">\n                <div className=\"gameActionsBtns\">\n                    <button className=\"flatBtn--clicked\">Btn</button>\n                    <button className=\"flatBtn\">Btn</button>\n                </div>\n            </div>\n        </div>\n    )\n}","/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/ButtonedInputBox/ButtonedInputBox.jsx",[],"/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Login/Login.jsx",["49","50"],"import './Login.css';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, FacebookAuthProvider, GithubAuthProvider } from 'firebase/auth';\nimport { useContext } from 'react';\nimport { User } from '../../App';\nimport { Socket } from 'socket.io-client';\n\nexport default function Login(props) {\n    const {user, setUser} = useContext(User);\n    const socket = props.socket;\n    \n    const googleAuth = () => {\n        const provider = new GoogleAuthProvider();\n        const auth = getAuth();\n        signInWithPopup(auth, provider).then((result) => {\n            const credential = GoogleAuthProvider.credentialFromResult(result);\n            const token = credential.accessToken;\n            const user = result.user;\n            console.log(user);\n            socket.emit('login', {name: user.displayName, email: user.email, photo: user.photoURL});\n            setUser({\n                name: user.displayName,\n                email: user.email,\n                photo: user.photoURL,\n                admin: false,\n            });\n            console.log(token);\n        }).catch((error) => {\n            console.error(`An error has occured, Error Code: ${error.code}, Error Message: ${error.message}, Email of error causer: ${error.email}`);\n        });\n    }\n\n    const facebookAuth = () => {\n        const provider = new FacebookAuthProvider();\n        const auth = getAuth();\n        signInWithPopup(auth, provider).then((result) => {\n            const user = result.user;\n            const credential = FacebookAuthProvider.credentialFromResult(result);\n            const accessToken = credential.accessToken;\n            socket.emit('login', {name: user.displayName, email: user.email, photo: user.photoURL});\n            \n            setUser({\n                name: user.displayName,\n                email: user.email,\n                photo: user.photoURL,\n                admin: false,\n            });\n            console.log(accessToken);\n        })\n    }\n\n    const githubAuth = () => {\n        const provider = new GithubAuthProvider();\n        const auth = getAuth();\n        signInWithPopup(auth, provider).then((result) => {\n            const user = result.user;\n            const credential = GithubAuthProvider.credentialFromResult(result);\n            const token = credential.accessToken;\n            socket.emit('login', {name: user.displayName, email: user.email, photo: user.photoURL});\n\n            setUser({\n                name: user.displayName,\n                email: user.email,\n                photo: user.photoURL,\n                admin: false,\n            });\n            console.log(token);\n        })\n    }\n\n    return (\n        <div className=\"Login\">\n            <div className=\"loginHeaders\">\n                <h1>Welcome to MultiCoder</h1>\n                <p className=\"greyish\">Login and start kicking!</p>\n            </div>\n            <div className=\"loginBtns\">\n                <button onClick={googleAuth} className=\"loginBtn--google\"><i class=\"fab fa-google\"></i>Google</button>\n                <button onClick={facebookAuth} className=\"loginBtn--facebook\"><i class=\"fab fa-facebook\"></i>Facebook</button>\n                <button onClick={githubAuth} className=\"loginBtn--github\"><i class=\"fab fa-github\"></i>Github</button>\n            </div>\n        </div>\n    )\n}","/media/moaad/New Volume/Projects/MultiCoder-2.0/frontend/src/Components/Lobby/Lobby.jsx",["51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":27,"column":7,"nodeType":"58","messageId":"59","endLine":27,"endColumn":10},{"ruleId":"60","severity":1,"message":"61","line":126,"column":8,"nodeType":"62","endLine":126,"endColumn":10,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":41,"column":8,"nodeType":"62","endLine":41,"endColumn":10,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":69,"column":51,"nodeType":"68","messageId":"69","endLine":69,"endColumn":98,"fix":"70"},{"ruleId":"56","severity":1,"message":"71","line":5,"column":10,"nodeType":"58","messageId":"59","endLine":5,"endColumn":16},{"ruleId":"56","severity":1,"message":"72","line":8,"column":12,"nodeType":"58","messageId":"59","endLine":8,"endColumn":16},{"ruleId":"60","severity":1,"message":"73","line":70,"column":8,"nodeType":"62","endLine":70,"endColumn":10,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'app' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["77"],"React Hook useEffect has missing dependencies: 'socket' and 'state'. Either include them or remove the dependency array.",["78"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"79","text":"80"},"'Socket' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate', 'roomCode', 'socket', and 'state.playersObj'. Either include them or remove the dependency array.",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},[3019,3019]," rel=\"noreferrer\"",{"desc":"86","fix":"87"},"Update the dependencies array to be: [state]",{"range":"88","text":"89"},"Update the dependencies array to be: [socket, state]",{"range":"90","text":"91"},"Update the dependencies array to be: [navigate, roomCode, socket, state.playersObj]",{"range":"92","text":"93"},[4747,4749],"[state]",[1563,1565],"[socket, state]",[2442,2444],"[navigate, roomCode, socket, state.playersObj]"]